<?php
include_once 'pat/moduli/menu_amm/operazioni/oggetti/OperazioneDefault.php';
include_once('pat/funzioniAVCP.php');
class avcp extends OperazioneDefault {
	
	public function __construct() { }
	
	public function postInsert($arrayParametri = array()) {
		global $enteAdmin, $datiUser, $configurazione, $database, $dati_db;
		
		if(!file_exists('avcp/'.$datiUser['id_ente_admin'])) {
			mkdir('avcp/'.$datiUser['id_ente_admin']);
		}
		
		$xml = $this->creaXml($arrayParametri);
		if($xml) {
			file_put_contents('avcp/'.$datiUser['id_ente_admin'].'/'.$_POST['anno'].'.xml', $xml);
		}
		
	}
	
	public function postUpdate($arrayParametri = array()) {
		global $enteAdmin, $datiUser, $configurazione, $database, $dati_db;
		
		if(!file_exists('avcp/'.$datiUser['id_ente_admin'])) {
			mkdir('avcp/'.$datiUser['id_ente_admin']);
		} else {
			//se esiste il file precedente lo cancello e lo ricreo
			if(file_exists('avcp/'.$datiUser['id_ente_admin'].'/'.$_POST['anno'].'.xml')) {
				@unlink('avcp/'.$datiUser['id_ente_admin'].'/'.$_POST['anno'].'.xml');
			}
			//se esiste il file dell'anno precedente lo elimino se � diverso dall'anno attuale
			if($_POST['anno_precedente'] != $_POST['anno'] and file_exists('avcp/'.$datiUser['id_ente_admin'].'/'.$_POST['anno_precedente'].'.xml')) {
				@unlink('avcp/'.$datiUser['id_ente_admin'].'/'.$_POST['anno_precedente'].'.xml');
			}
		}
		
		$xml = $this->creaXml($arrayParametri);
		if($xml) {
			file_put_contents('avcp/'.$datiUser['id_ente_admin'].'/'.$_POST['anno'].'.xml', $xml);
		}
		
	}
	
	public function preDelete($arrayParametri = array()) {
		global $enteAdmin, $datiUser, $configurazione, $database, $dati_db;
		
		$cancello = isset($_POST['id_cancello_tabella']) ? $_POST['id_cancello_tabella'] : 0;
		$arrayOggetti = explode(",", $cancello);
		$numeroOggetti = count($arrayOggetti)-1;
		$condizione = 'id='.$arrayOggetti[0];
		for ($i=1;$i<$numeroOggetti+1;$i++) {
			if ($arrayOggetti[$i] != '') {
				$condizione .= ' or id='.$arrayOggetti[$i];
			}
		}
		
		$sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_url_avcp WHERE ".$condizione;
		if($result = $database->connessioneConReturn($sql)) {
			$this->arrayInterno['fileToDelete'] = $database->sqlArrayAss($result);
		}
		
	}
	
	public function postDelete($arrayParametri = array()) {
		global $datiUser;
		
		foreach((array)$this->arrayInterno['fileToDelete'] as $f) {
			if(file_exists('avcp/'.$datiUser['id_ente_admin'].'/'.$f['anno'].'.xml')) {
				@unlink('avcp/'.$datiUser['id_ente_admin'].'/'.$f['anno'].'.xml');
			}
		}
	}


	private function creaXML($arrayParametri = array()) {
		global $enteAdmin, $datiUser, $configurazione, $database, $dati_db, $oggOgg;
		
		$annoRiferimento = $_POST['anno'];
		$entePubblicatore = $enteAdmin['nome_completo_ente'];
		if($_GET['id']) {
			$dataPubblicazioneDataset = date('Y-m-d', mostraDatoOggetto($_GET['id'], $oggOgg->idOggetto, 'data_creazione'));
			
		} else {
			$dataPubblicazioneDataset = date('Y-m-d');
		}
		$dataUltimoAggiornamentoDataset = date('Y-m-d');
		
		//configurazione metadata
		$titolo = "Pubblicazione legge 190/2012";
		$abstract = "Pubblicazione legge 190/2012 anno di riferimento ".$annoRiferimento;
		$urlFile = "http://".$enteAdmin['nome_breve_ente'].".noemdominio/avcp/".$datiUser['id_ente_admin']."/".$annoRiferimento.".xml";
		$licenza = "IODL";
		
		if($annoRiferimento == 2013) {
			$inizio = mktime(0,0,0,12,1,$annoRiferimento-1);
		} else {
			$inizio = mktime(0,0,0,1,1,$annoRiferimento);
		}
		$fine = mktime(23,59,59,12,31,$annoRiferimento);
		$condAnno = " AND data_attivazione >= ".$inizio." AND data_attivazione <= ".$fine." ";
		$condTipologia = " AND (tipologia = 'bandi ed inviti' OR tipologia = 'esiti' OR tipologia = 'delibere e determine a contrarre' OR tipologia = 'affidamenti') ";
		
		$sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_gare_atti WHERE id_ente = ".$datiUser['id_ente_admin']." ".$condTipologia." ".$condAnno." ORDER BY data_attivazione";
		if($result = $database->connessioneConReturn($sql)) {
			$result = $database->sqlArrayAss($result);
		}
		
		$xmlDoc = new DOMDocument();
		$xmlDoc->encoding = 'UTF-8';
		
		//root
		$root = $xmlDoc->appendChild($xmlDoc->createElement("legge190:pubblicazione"));
		$root->appendChild($xmlDoc->createAttribute("xsi:schemaLocation"))->appendChild($xmlDoc->createTextNode("legge190_1_0 datasetAppaltiL190.xsd"));
		$root->appendChild($xmlDoc->createAttribute("xmlns:xsi"))->appendChild($xmlDoc->createTextNode("http://www.w3.org/2001/XMLSchema-instance"));
		$root->appendChild($xmlDoc->createAttribute("xmlns:legge190"))->appendChild($xmlDoc->createTextNode("legge190_1_0"));
		
		//metadata
		$meta = $root->appendChild($xmlDoc->createElement("metadata"));
		$meta->appendChild($xmlDoc->createElement("titolo"))->appendChild($xmlDoc->createTextNode(utf8_encode($titolo)));
		$meta->appendChild($xmlDoc->createElement("abstract"))->appendChild($xmlDoc->createTextNode(utf8_encode($abstract)));
		$meta->appendChild($xmlDoc->createElement("dataPubbicazioneDataset"))->appendChild($xmlDoc->createTextNode(utf8_encode($dataPubblicazioneDataset)));
		$meta->appendChild($xmlDoc->createElement("entePubblicatore"))->appendChild($xmlDoc->createTextNode(utf8_encode($entePubblicatore)));
		$meta->appendChild($xmlDoc->createElement("dataUltimoAggiornamentoDataset"))->appendChild($xmlDoc->createTextNode(utf8_encode($dataUltimoAggiornamentoDataset)));
		$meta->appendChild($xmlDoc->createElement("annoRiferimento"))->appendChild($xmlDoc->createTextNode(utf8_encode($annoRiferimento)));
		$meta->appendChild($xmlDoc->createElement("urlFile"))->appendChild($xmlDoc->createTextNode(utf8_encode($urlFile)));
		$meta->appendChild($xmlDoc->createElement("licenza"))->appendChild($xmlDoc->createTextNode(utf8_encode($licenza)));
		
		//data
		$data = $root->appendChild($xmlDoc->createElement("data"));
		
		foreach((array)$result as $r) {
			
			$lotto = $data->appendChild($xmlDoc->createElement("lotto"));
			//$cig = utf8_encode(substr($r['cig'], 0, 10));
			$cig = utf8_encode(trim($r['cig']));
			if($cig == '') {
				$cig = '0000000000';
			}
			$lotto->appendChild($xmlDoc->createElement("cig"))->appendChild($xmlDoc->createTextNode($cig));
			
			$strutturaProponente = $lotto->appendChild($xmlDoc->createElement("strutturaProponente"));
			$codiceFiscaleProp = trim($r['dati_aggiudicatrice']);
			if(!validaCfPi($codiceFiscaleProp)) {
				//se non � corretto non lo esporto
				$codiceFiscaleProp = '';
			}
			$strutturaProponente->appendChild($xmlDoc->createElement("codiceFiscaleProp"))->appendChild($xmlDoc->createTextNode(utf8_encode($codiceFiscaleProp)));
			$strutturaProponente->appendChild($xmlDoc->createElement("denominazione"))->appendChild($xmlDoc->createTextNode(utf8_encode(trim(substr(html_entity_decode($r['denominazione_aggiudicatrice']), 0, 250)))));
			
			$lotto->appendChild($xmlDoc->createElement("oggetto"))->appendChild($xmlDoc->createTextNode(utf8_encode(substr(html_entity_decode($r['oggetto']), 0, 250))));
			
			$sceltaContraente = trim($r['scelta_contraente']);
			if(!validaSceltaContraente($sceltaContraente)) {
				//se non � corretta non la esporto
				$sceltaContraente = '';
			} else {
				//nella scelta 14 c'� una virgola che nel DB non viene salvata, altrimenti il sistema non funziona (colpa della select con valori)
				if($sceltaContraente == '14-PROCEDURA SELETTIVA EX ART 238 C.7 D.LGS. 163/2006') {
					$sceltaContraente = '14-PROCEDURA SELETTIVA EX ART 238 C.7, D.LGS. 163/2006';
				}
			}
			$lotto->appendChild($xmlDoc->createElement("sceltaContraente"))->appendChild($xmlDoc->createTextNode(utf8_encode($sceltaContraente)));
			
			$partecipanti = $lotto->appendChild($xmlDoc->createElement("partecipanti"));
			
			//verificare se ci sono pi� partecipanti
			$idPartecipanti = explode(',', $r['elenco_partecipanti']);
			$condPartecipanti = array();
			foreach((array)$idPartecipanti as $idp) {
				if($idp > 0) {
					$condPartecipanti[] = " id = ".$idp." ";
				}
			}
			$dataScript = mktime(0,0,0,date("m"),date("d"),date("Y"));
			if($r['tipologia'] == 'bandi ed inviti' and $r['data_scadenza'] >= $dataScript) {
				//il bando non � ancora scaduto quindi escludo tutti i partecipanti
				$condPartecipanti = array();
			}
			
			if(count($condPartecipanti)) {
				$condPartecipanti = " AND (".implode(' OR ', $condPartecipanti).") ";
				$sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_elenco_fornitori WHERE id_ente = ".$datiUser['id_ente_admin'].$condPartecipanti;
				if($par = $database->connessioneConReturn($sql)) {
					$par = $database->sqlArrayAss($par);
					if(count($par > 0)) {
						foreach((array)$par as $p) {
							$partecipante = $partecipanti->appendChild($xmlDoc->createElement("partecipante"));
							$inclusoCF = false;
							if($p['codice_fiscale'] != '') {
								if(!validaCfPi($p['codice_fiscale'])) {
									//se non � corretto non lo esporto
									$p['codice_fiscale'] = '';
								} else {
									$partecipante->appendChild($xmlDoc->createElement("codiceFiscale"))->appendChild($xmlDoc->createTextNode(utf8_encode($p['codice_fiscale'])));
								}
								$inclusoCF = true;
							}
							if($p['fiscale_estero'] != '' and !$inclusoCF) {
								//inserisco identificativo fiscale estero solo se non ho gi� inserito il codice fiscale
								$partecipante->appendChild($xmlDoc->createElement("identificativoFiscaleEstero"))->appendChild($xmlDoc->createTextNode(utf8_encode($p['fiscale_estero'])));
							}
							$partecipante->appendChild($xmlDoc->createElement("ragioneSociale"))->appendChild($xmlDoc->createTextNode(utf8_encode(html_entity_decode($p['nominativo']))));
						}
					}
				}
			}
			
			$aggiudicatari = $lotto->appendChild($xmlDoc->createElement("aggiudicatari"));
			
			//verificare se ci sono pi� aggiudicatari
			$idAggiudicatari = explode(',', $r['elenco_aggiudicatari']);
			$condAggiudicatari = array();
			foreach((array)$idAggiudicatari as $ida) {
				if($ida > 0) {
					$condAggiudicatari[] = " id = ".$ida." ";
				}
			}
			if($r['tipologia'] == 'bandi ed inviti' and $r['data_scadenza'] >= $dataScript) {
				//il bando non � ancora scaduto quindi escludo tutti i partecipanti
				$condAggiudicatari = array();
			}
			
			if(count($condAggiudicatari)) {
				$condAggiudicatari = " AND (".implode(' OR ', $condAggiudicatari).") ";
				$sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_elenco_fornitori WHERE id_ente = ".$datiUser['id_ente_admin'].$condAggiudicatari;
				if($agg = $database->connessioneConReturn($sql)) {
					$agg = $database->sqlArrayAss($agg);
					if(count($agg > 0)) {
						foreach((array)$agg as $a) {
							$aggiudicatario = $aggiudicatari->appendChild($xmlDoc->createElement("aggiudicatario"));
							$inclusoCF = false;
							if($a['codice_fiscale'] != '') {
								if(!validaCfPi($a['codice_fiscale'])) {
									//se non � corretto non lo esporto
									$a['codice_fiscale'] = '';
								} else {
									$aggiudicatario->appendChild($xmlDoc->createElement("codiceFiscale"))->appendChild($xmlDoc->createTextNode(utf8_encode($a['codice_fiscale'])));
								}
								$inclusoCF = true;
							}
							if($a['fiscale_estero'] != '' and !$inclusoCF) {
								$aggiudicatario->appendChild($xmlDoc->createElement("identificativoFiscaleEstero"))->appendChild($xmlDoc->createTextNode(utf8_encode($a['fiscale_estero'])));
							}
							$aggiudicatario->appendChild($xmlDoc->createElement("ragioneSociale"))->appendChild($xmlDoc->createTextNode(utf8_encode(html_entity_decode($a['nominativo']))));
						}
					}
				}
			}
			
			$importoAggiudicazione = $r['valore_importo_aggiudicazione'];
			if($importoAggiudicazione != '') {
				$importoAggiudicazione = number_format($importoAggiudicazione,2,'.','');
				if($importoAggiudicazione == '') {
					$importoAggiudicazione = 0.00;
				}
			} else {
				$importoAggiudicazione = 0.00;
			}
			$lotto->appendChild($xmlDoc->createElement("importoAggiudicazione"))->appendChild($xmlDoc->createTextNode(utf8_encode($importoAggiudicazione)));
			
			$tempiCompletamento = $lotto->appendChild($xmlDoc->createElement("tempiCompletamento"));
			
			$dataInizio = $r['data_inizio_lavori'];
			if($dataInizio > 0) {
				$dataInizio = date('Y-m-d', $dataInizio);
				$tempiCompletamento->appendChild($xmlDoc->createElement("dataInizio"))->appendChild($xmlDoc->createTextNode(utf8_encode($dataInizio)));
			}
			
			$dataUltimazione = $r['data_lavori_fine'];
			if($dataUltimazione > 0) {
				$dataUltimazione = date('Y-m-d', $dataUltimazione);
				$tempiCompletamento->appendChild($xmlDoc->createElement("dataUltimazione"))->appendChild($xmlDoc->createTextNode(utf8_encode($dataUltimazione)));
			}
			
			$importoSommeLiquidate = $r['importo_liquidato'];
			if($importoSommeLiquidate != '') {
				$importoSommeLiquidate = number_format($importoSommeLiquidate,2,'.','');
				if($importoSommeLiquidate == '') {
					$importoSommeLiquidate = 0.00;
				}
			} else {
				$importoSommeLiquidate = 0.00;
			}
			$lotto->appendChild($xmlDoc->createElement("importoSommeLiquidate"))->appendChild($xmlDoc->createTextNode(utf8_encode($importoSommeLiquidate)));
		
		}
		
		header("Content-Type: text/plain");
		$xmlDoc->formatOutput = true;
		return $xmlDoc->saveXML();
		
	}
	
	private function creaXML_2($arrayParametri = array()) {
		global $enteAdmin, $datiUser, $configurazione, $database, $dati_db, $oggOgg;
		
		$annoRiferimento = $_POST['anno'];
		$entePubblicatore = $enteAdmin['nome_completo_ente'];
		if($_GET['id']) {
			$dataPubblicazioneDataset = date('Y-m-d', mostraDatoOggetto($_GET['id'], $oggOgg->idOggetto, 'data_creazione'));
			
		} else {
			$dataPubblicazioneDataset = date('Y-m-d');
		}
		$dataUltimoAggiornamentoDataset = date('Y-m-d');
		
		//configurazione metadata
		$titolo = "Pubblicazione legge 190/2012";
		$abstract = "Pubblicazione legge 190/2012 anno di riferimento ".$annoRiferimento;
		$urlFile = "http://".$enteAdmin['nome_breve_ente'].".nomedominio/avcp/".$datiUser['id_ente_admin']."/".$annoRiferimento.".xml";
		$licenza = "IODL";
		
		if($annoRiferimento == 2013) {
			$inizio = mktime(0,0,0,12,1,$annoRiferimento-1);
		} else {
			$inizio = mktime(0,0,0,1,1,$annoRiferimento);
		}
		$fine = mktime(23,59,59,12,31,$annoRiferimento);
		$condAnno = " AND data_attivazione >= ".$inizio." AND data_attivazione <= ".$fine." ";
		$condTipologia = " AND (tipologia = 'bandi ed inviti' OR tipologia = 'esiti' OR tipologia = 'delibere e determine a contrarre' OR tipologia = 'affidamenti' OR tipologia = 'somme liquidate') ";
		
		$sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_gare_atti WHERE id_ente = ".$datiUser['id_ente_admin']." ".$condTipologia." ".$condAnno." ORDER BY data_attivazione";
		if($result = $database->connessioneConReturn($sql)) {
			$result = $database->sqlArrayAss($result);
		}
		
		$xmlDoc = new DOMDocument();
		$xmlDoc->encoding = 'UTF-8';
		
		//root
		$root = $xmlDoc->appendChild($xmlDoc->createElement("legge190:pubblicazione"));
		$root->appendChild($xmlDoc->createAttribute("xsi:schemaLocation"))->appendChild($xmlDoc->createTextNode("legge190_1_0 datasetAppaltiL190.xsd"));
		$root->appendChild($xmlDoc->createAttribute("xmlns:xsi"))->appendChild($xmlDoc->createTextNode("http://www.w3.org/2001/XMLSchema-instance"));
		$root->appendChild($xmlDoc->createAttribute("xmlns:legge190"))->appendChild($xmlDoc->createTextNode("legge190_1_0"));
		
		//metadata
		$meta = $root->appendChild($xmlDoc->createElement("metadata"));
		$meta->appendChild($xmlDoc->createElement("titolo"))->appendChild($xmlDoc->createTextNode(utf8_encode($titolo)));
		$meta->appendChild($xmlDoc->createElement("abstract"))->appendChild($xmlDoc->createTextNode(utf8_encode($abstract)));
		$meta->appendChild($xmlDoc->createElement("dataPubbicazioneDataset"))->appendChild($xmlDoc->createTextNode(utf8_encode($dataPubblicazioneDataset)));
		$meta->appendChild($xmlDoc->createElement("entePubblicatore"))->appendChild($xmlDoc->createTextNode(utf8_encode($entePubblicatore)));
		$meta->appendChild($xmlDoc->createElement("dataUltimoAggiornamentoDataset"))->appendChild($xmlDoc->createTextNode(utf8_encode($dataUltimoAggiornamentoDataset)));
		$meta->appendChild($xmlDoc->createElement("annoRiferimento"))->appendChild($xmlDoc->createTextNode(utf8_encode($annoRiferimento)));
		$meta->appendChild($xmlDoc->createElement("urlFile"))->appendChild($xmlDoc->createTextNode(utf8_encode($urlFile)));
		$meta->appendChild($xmlDoc->createElement("licenza"))->appendChild($xmlDoc->createTextNode(utf8_encode($licenza)));
		
		//data
		$data = $root->appendChild($xmlDoc->createElement("data"));
		
		//inizializzo array dei lotti analizzati per non includerli 2 o pi� volte
		$arrayLottiAnalizzati = array();
		foreach((array)$result as $r) {
		
			if($r['bando_collegato'] > 0) {
				//parto sempre da chi non ha nulla associato
				$idPartenza = $this->ricavaIdAntenato($r['bando_collegato']);
			} else {
				$idPartenza = $r['id'];
			}
			
			//creo il lotto a partire da $idPartenza: con questa modalit� riprendo anche lotti di anni precedenti ma che hanno liquidazioni nell'anno in analisi
			$arrayLottiAnalizzati[$idPartenza] = true;
			$lottoArray = $this->preparaLottoArray($idPartenza, $lottoArray, $arrayLottiAnalizzati);
			
			$lotto = $data->appendChild($xmlDoc->createElement("lotto"));
			//$cig = utf8_encode(substr($r['cig'], 0, 10));
			$cig = utf8_encode(trim($r['cig']));
			if($cig == '') {
				$cig = '0000000000';
			}
			$lotto->appendChild($xmlDoc->createElement("cig"))->appendChild($xmlDoc->createTextNode($cig));
			
			$strutturaProponente = $lotto->appendChild($xmlDoc->createElement("strutturaProponente"));
			$codiceFiscaleProp = trim($r['dati_aggiudicatrice']);
			if(!validaCfPi($codiceFiscaleProp)) {
				//se non � corretto non lo esporto
				$codiceFiscaleProp = '';
			}
			$strutturaProponente->appendChild($xmlDoc->createElement("codiceFiscaleProp"))->appendChild($xmlDoc->createTextNode(utf8_encode($codiceFiscaleProp)));
			$strutturaProponente->appendChild($xmlDoc->createElement("denominazione"))->appendChild($xmlDoc->createTextNode(utf8_encode(trim(substr(html_entity_decode($r['denominazione_aggiudicatrice']), 0, 250)))));
			
			$lotto->appendChild($xmlDoc->createElement("oggetto"))->appendChild($xmlDoc->createTextNode(utf8_encode(substr(html_entity_decode($r['oggetto']), 0, 250))));
			
			$sceltaContraente = trim($r['scelta_contraente']);
			if(!validaSceltaContraente($sceltaContraente)) {
				//se non � corretta non la esporto
				$sceltaContraente = '';
			} else {
				//nella scelta 14 c'� una virgola che nel DB non viene salvata, altrimenti il sistema non funziona (colpa della select con valori)
				if($sceltaContraente == '14-PROCEDURA SELETTIVA EX ART 238 C.7 D.LGS. 163/2006') {
					$sceltaContraente = '14-PROCEDURA SELETTIVA EX ART 238 C.7, D.LGS. 163/2006';
				}
			}
			$lotto->appendChild($xmlDoc->createElement("sceltaContraente"))->appendChild($xmlDoc->createTextNode(utf8_encode($sceltaContraente)));
			
			$partecipanti = $lotto->appendChild($xmlDoc->createElement("partecipanti"));
			
			//verificare se ci sono pi� partecipanti
			$idPartecipanti = explode(',', $r['elenco_partecipanti']);
			$condPartecipanti = array();
			foreach((array)$idPartecipanti as $idp) {
				if($idp > 0) {
					$condPartecipanti[] = " id = ".$idp." ";
				}
			}
			$dataScript = mktime(0,0,0,date("m"),date("d"),date("Y"));
			if($r['tipologia'] == 'bandi ed inviti' and $r['data_scadenza'] >= $dataScript) {
				//il bando non � ancora scaduto quindi escludo tutti i partecipanti
				$condPartecipanti = array();
			}
			
			if(count($condPartecipanti)) {
				$condPartecipanti = " AND (".implode(' OR ', $condPartecipanti).") ";
				$sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_elenco_fornitori WHERE id_ente = ".$datiUser['id_ente_admin'].$condPartecipanti;
				if($par = $database->connessioneConReturn($sql)) {
					$par = $database->sqlArrayAss($par);
					if(count($par > 0)) {
						foreach((array)$par as $p) {
							$partecipante = $partecipanti->appendChild($xmlDoc->createElement("partecipante"));
							$inclusoCF = false;
							if($p['codice_fiscale'] != '') {
								if(!validaCfPi($p['codice_fiscale'])) {
									//se non � corretto non lo esporto
									$p['codice_fiscale'] = '';
								} else {
									$partecipante->appendChild($xmlDoc->createElement("codiceFiscale"))->appendChild($xmlDoc->createTextNode(utf8_encode($p['codice_fiscale'])));
								}
								$inclusoCF = true;
							}
							if($p['fiscale_estero'] != '' and !$inclusoCF) {
								//inserisco identificativo fiscale estero solo se non ho gi� inserito il codice fiscale
								$partecipante->appendChild($xmlDoc->createElement("identificativoFiscaleEstero"))->appendChild($xmlDoc->createTextNode(utf8_encode($p['fiscale_estero'])));
							}
							$partecipante->appendChild($xmlDoc->createElement("ragioneSociale"))->appendChild($xmlDoc->createTextNode(utf8_encode(html_entity_decode($p['nominativo']))));
						}
					}
				}
			}
			
			$aggiudicatari = $lotto->appendChild($xmlDoc->createElement("aggiudicatari"));
			
			//verificare se ci sono pi� aggiudicatari
			$idAggiudicatari = explode(',', $r['elenco_aggiudicatari']);
			$condAggiudicatari = array();
			foreach((array)$idAggiudicatari as $ida) {
				if($ida > 0) {
					$condAggiudicatari[] = " id = ".$ida." ";
				}
			}
			if($r['tipologia'] == 'bandi ed inviti' and $r['data_scadenza'] >= $dataScript) {
				//il bando non � ancora scaduto quindi escludo tutti i partecipanti
				$condAggiudicatari = array();
			}
			
			if(count($condAggiudicatari)) {
				$condAggiudicatari = " AND (".implode(' OR ', $condAggiudicatari).") ";
				$sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_elenco_fornitori WHERE id_ente = ".$datiUser['id_ente_admin'].$condAggiudicatari;
				if($agg = $database->connessioneConReturn($sql)) {
					$agg = $database->sqlArrayAss($agg);
					if(count($agg > 0)) {
						foreach((array)$agg as $a) {
							$aggiudicatario = $aggiudicatari->appendChild($xmlDoc->createElement("aggiudicatario"));
							$inclusoCF = false;
							if($a['codice_fiscale'] != '') {
								if(!validaCfPi($a['codice_fiscale'])) {
									//se non � corretto non lo esporto
									$a['codice_fiscale'] = '';
								} else {
									$aggiudicatario->appendChild($xmlDoc->createElement("codiceFiscale"))->appendChild($xmlDoc->createTextNode(utf8_encode($a['codice_fiscale'])));
								}
								$inclusoCF = true;
							}
							if($a['fiscale_estero'] != '' and !$inclusoCF) {
								$aggiudicatario->appendChild($xmlDoc->createElement("identificativoFiscaleEstero"))->appendChild($xmlDoc->createTextNode(utf8_encode($a['fiscale_estero'])));
							}
							$aggiudicatario->appendChild($xmlDoc->createElement("ragioneSociale"))->appendChild($xmlDoc->createTextNode(utf8_encode(html_entity_decode($a['nominativo']))));
						}
					}
				}
			}
			
			$importoAggiudicazione = $r['valore_importo_aggiudicazione'];
			if($importoAggiudicazione != '') {
				$importoAggiudicazione = number_format($importoAggiudicazione,2,'.','');
				if($importoAggiudicazione == '') {
					$importoAggiudicazione = 0.00;
				}
			} else {
				$importoAggiudicazione = 0.00;
			}
			$lotto->appendChild($xmlDoc->createElement("importoAggiudicazione"))->appendChild($xmlDoc->createTextNode(utf8_encode($importoAggiudicazione)));
			
			$tempiCompletamento = $lotto->appendChild($xmlDoc->createElement("tempiCompletamento"));
			
			$dataInizio = $r['data_inizio_lavori'];
			if($dataInizio > 0) {
				$dataInizio = date('Y-m-d', $dataInizio);
				$tempiCompletamento->appendChild($xmlDoc->createElement("dataInizio"))->appendChild($xmlDoc->createTextNode(utf8_encode($dataInizio)));
			}
			
			$dataUltimazione = $r['data_lavori_fine'];
			if($dataUltimazione > 0) {
				$dataUltimazione = date('Y-m-d', $dataUltimazione);
				$tempiCompletamento->appendChild($xmlDoc->createElement("dataUltimazione"))->appendChild($xmlDoc->createTextNode(utf8_encode($dataUltimazione)));
			}
			
			$importoSommeLiquidate = $r['importo_liquidato'];
			if($importoSommeLiquidate != '') {
				$importoSommeLiquidate = number_format($importoSommeLiquidate,2,'.','');
				if($importoSommeLiquidate == '') {
					$importoSommeLiquidate = 0.00;
				}
			} else {
				$importoSommeLiquidate = 0.00;
			}
			$lotto->appendChild($xmlDoc->createElement("importoSommeLiquidate"))->appendChild($xmlDoc->createTextNode(utf8_encode($importoSommeLiquidate)));
		
		}
		
		header("Content-Type: text/plain");
		$xmlDoc->formatOutput = true;
		return $xmlDoc->saveXML();
		
	}
	
	private function ricavaIdAntenato($id) {
		global $enteAdmin, $datiUser, $configurazione, $database, $dati_db, $oggOgg;
		
		$sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_gare_atti WHERE id = ".$id;
		if($result = $database->connessioneConReturn($sql)) {
			$result = $database->sqlArray($result);
		}
		if($result['id'] and $result['bando_collegato'] > 0) {
			return $this->ricavaIdAntenato($result['bando_collegato']);
		} else {
			return $result['id'];
		}
	}
	
	private function preparaLottoArray($idPartenza, $lottoArray, $arrayLottiAnalizzati) {
		
	}

}
?>