<?
$campoCompenso = 'compenso';
if($enteAdmin['importi_numerici']) {
	$campoCompenso .= '_valore';
}
?>
<script type="text/javascript">	
	// attivo la validazione inline del form
	jQuery(document).ready(function(){

		// necessario per i campi file
		//jQuery('.uniform-file').uniform();
		// necessario per i campi select con ricerca
		jQuery(".chzn-select").chosen({no_results_text: "Nessun risultato per",allow_single_deselect: true});
		//campi decimali (importi)
		jQuery('.a-num-class').autoNumeric({aSep: '.', aDec: ',', vMax: '999999999999.99'});		

		function fine_incaricoNonDisponibile() {
			if(jQuery("#fine_incarico_non_disponibile").attr('checked') == 'checked') {
				jQuery("#fine_incaricoBox").hide();
				jQuery("#fine_incaricoVis").rules("remove");
				jQuery("#fine_incarico").val("");
				jQuery("#fine_incaricoVis").val("");
				jQuery("#fine_incarico_non_disponibile_textBox").show();
				jQuery("#fine_incarico_non_disponibile_text").rules("add", {
					required: true,
					messages: {
						required: "Indicare le motivazioni per la mancanza della data di fine incarico"
					}
				});
			} else {
				jQuery("#fine_incaricoBox").show();
				jQuery("#fine_incaricoVis").rules("add", {
					required: true,
					messages: {
						required: "Seleziona la data di fine incarico"
					}
				});
				jQuery("#fine_incarico_non_disponibile_textBox").hide();
				jQuery("#fine_incarico_non_disponibile_text").rules("remove");
				jQuery("#fine_incarico_non_disponibile_text").val("");
			}
		}
		
		jQuery("#fine_incarico_non_disponibile").change(function(){
			fine_incaricoNonDisponibile();
		});

		jQuery.validator.addMethod("dateLessThan", function(value, element, params) {
				if (params === "")
			    	return true;
			    var from = value.split("/");
				var val = new Date(from[2], from[1] - 1, from[0]);
				from = params.split("/");
				var par = new Date(from[2], from[1] - 1, from[0]);
				if (!/Invalid|NaN/.test(new Date(val))) {
			    	return new Date(val) < new Date(par);
				}
				return isNaN(val) && isNaN(par)
		        	|| (Number(val) < Number(par));
			},
			'Deve essere inferiore al {0}.'
		);
		
		jQuery.validator.addMethod("allegatoCheck", function(value , element) {
			if('<? echo $id; ?>' != '') {
				//modifica
				if(jQuery('#'+element.id+'azione').val() == 'nessuna') {
					return true;
				} else if(jQuery('#'+element.id+'azione').val() == 'elimina') {
					return false;
				} else if(jQuery('#'+element.id+'azione').val() == 'modifica' && !jQuery('#'+element.id).val()) {
					return false;
				} else if(jQuery('#'+element.id+'azione').val() == 'importAllegato' && !jQuery('#import-file-'+element.id).val()) {
					return false;
				} else if(jQuery('#'+element.id+'azione').val() == 'aggiungi' && !jQuery('#'+element.id).val() && !jQuery('#import-file-'+element.id).val()) {
					return false;
				} else {
					return true;
				}
			} else {
				//inserimento
				if(!jQuery('#'+element.id).val() && !jQuery('#import-file-'+element.id).val()) {
					return false;
				} else {
					return true;
				}
			}
		}, 'Inserisci il file allegato');
		
		jQuery.validator.addMethod("floatCheck", function(value) {
			var regex = /^((\d{1,3}(\.\d{3})*|(\d+))(\,\d{2})?)?$/;
			//vecchio controllo
			//var regex = /^(([1-9][0-9]*|[0-9])([.]{1}[0-9]{1,2})?)?$/;
			if(regex.test(value)) {
				return true;
			}
			return false;
		});
		
		// Devo inizializzare il campo editor col nuovo ckEditor
		//var editorDesc = CKEDITOR.replace( 'note' );
		//var editorEstremi = CKEDITOR.replace( 'estremi_atti' );
		<?
		if(moduloAttivo('soc-trasp')) {
			?>
			//var editorProcedura = CKEDITOR.replace( 'tipo_procedura_contraente' );
			<?
		}
		?>
		CKEDITOR.replaceClass = 'htmlEditor';

		var validator = jQuery("#formOggetto").validate({
			ignore: null,
			ignore: 'input[type="hidden"]',
			debug: false,
			focusInvalid: true,
			focusCleanup: false,
			errorPlacement: function(error, element) {
				if (element.parent().parent().parent().parent().parent().attr('class') == "contenitore-errore-allegato") {
					//file non inserito nel caso di import da albo
					error.appendTo( element.parent().parent().parent().parent().parent() );
				} else if (element.parent().parent().attr('class') == "input-append") {
					error.appendTo( element.parent().parent().parent().parent() );
				} else {
					error.appendTo( element.parent().parent() );
				}
			},	
			
			rules: {
				<?if(($datiUser['id_ente_admin']==35 OR ($datiUser['id_ente_admin']==142 AND $datiUser['acl']==3)) AND $aclTrasparenza[$menuSecondario]['modifica'] AND $aclTrasparenza[$menuSecondario]['creazione'] AND $_GET['azione'] != 'aggiungi') {
						echo "id_proprietario: \"required\",";
				}?>		
				nominativo: "required",
				<? // scelta ente
				if (($datiUser['permessi']==10 or $datiUser['permessi']==3) AND !$id) { 
					echo "id_ente: \"required\",";
				} ?>
				oggetto: "required",
				<? echo $campoCompenso; ?>: {
					required: true,
					floatCheck: true
				},
				estremi_atti: {
					required: function(textarea) {
						CKEDITOR.instances[textarea.id].updateElement(); // aggiorno textarea prima del controllo
						var editorcontent = textarea.value.replace(/<[^>]*>/gi, ''); // elimino i tag (per quando il testo è realmente vuoto)
						return editorcontent.length === 0;
					}
				},
				<? if(moduloAttivo('incarichiPerlaPA')) { ?>
				inizio_incaricoVis: {
					required: true,
					dateLessThan: '01/01/2018',
				},
				<? } else { ?>
				inizio_incaricoVis: "required",
				<? } ?>
				tipo_incarico: "required"
			},
			
			messages: {
				nominativo: "Inserisci il nominativo del soggetto incaricato (cognome e nome)",
				<? // scelta ente
				if (($datiUser['permessi']==10 or $datiUser['permessi']==3) AND !$id) { 
					echo "id_ente: \"Devi selezionare l'ente per il quale inserire la modulistica\",";
				} ?>
				oggetto: "Inserisci l'oggetto dell'incarico",
				<? echo $campoCompenso; ?>: "Inserisci il compenso previsto, comprensivo di eventuali parti variabili (es. 123.456,00)",
				estremi_atti: "Inserire gli estremi atto di conferimento",
				<? if(moduloAttivo('incarichiPerlaPA')) { ?>
				inizio_incaricoVis: "Seleziona la data di inizio incarico (antecedente al 01/01/2018)",
				<? } else { ?>
				inizio_incaricoVis: "Seleziona la data di inizio incarico",
				<? } ?>
				tipo_incarico: "Seleziona la tipologia",
				id_proprietario: "Devi selezionare l'utente proprietario"
			},
			
			highlight: function(label) {
				jQuery(label).closest('.control-group').addClass('error');
			},
			invalidHandler: function() {
				if( validator.numberOfInvalids() ) {
					jQuery('#a_dati_tab').tab('show');
				}
			}

		});
		
		fine_incaricoNonDisponibile();

		<?
		if(file_exists('codicepers/ente/'.$entePubblicato['nome_breve_ente'].'/form/incarichi/'.basename(__FILE__, '.tmp').'.js.tmp')) {
			include ('codicepers/ente/'.$entePubblicato['nome_breve_ente'].'/form/incarichi/'.basename(__FILE__, '.tmp').'.js.tmp');
		}
		?>
		
	});
</script>

<? if(!$box) { ?>
	<a href="?menu=<? echo $menu; ?>&amp;menusec=<? echo $menuSecondario; ?>" class="btn btn-rounded"> <i class="iconfa-circle-arrow-left"></i> &nbsp; Torna a elenco incarichi e consulenze</a> 
<? } ?>

<div class="navbar">
	<div class="navbar-inner">
		<ul class="nav">
			<a class="brand"><span class="iconfa-pencil"></span>&nbsp;<? if ($id) { echo "Modifica"; } else {  echo "Aggiunta"; } ?> elemento</a>
			<li class="active">
				<a id="a_dati_tab" data-toggle="tab" href="#dati_tab" role="tab">Gestione informazioni</a>
			</li>
			<li>
				<a id="a_allegati_tab" data-toggle="tab" href="#allegati_tab" role="tab">Gestione allegati</a>
			</li>
		</ul>
	</div>
</div>


<div class="tab-content">

<div class="tab-pane active widgetbox box-inverse" id="dati_tab" role="tabpanel">

	<h4 class="widgettitle">
		Informazioni <!-- <? if ($id) { echo "Modifica"; } else {  echo "Aggiunta"; } ?> incarichi e consulenze -->
	</h4>

	<div class="widgetcontent wc1">
		<? include ('./app/admin_template/oggetti/info_form.tmp'); ?>
		<form id="formOggetto" class="stdform" method="post" enctype="multipart/form-data" action="admin__pat.php?menu=<? echo $menu; ?>&amp;menusec=<? echo $menuSecondario; ?>&amp;azione=lista&amp;azionesec=<? echo $azione; ?>&amp;id=<? echo $id; ?>&amp;box=<? echo $box; ?>">
		
			<? creaFormTrasp('','sistema', '', '', '', '',''); ?>
			
			<?
			// scelta ente
			if (($datiUser['permessi']==10 or $datiUser['permessi']==3) AND !$id) { 
				creaFormTrasp('Ente di Appartenenza','enti', 'id_ente', '', '', '','input-xlarge',0,'', 0, 0,true); 
			} else {
				echo "<input type=\"hidden\" id=\"id_ente\" name=\"id_ente\" value=\"".$datiUser['id_ente_admin']."\">";
			}
			//import atto da albo online
			if($azione == 'importAtto' and $atto['id'] > 0) {
				echo "<input type=\"hidden\" id=\"id_atto_albo\" name=\"id_atto_albo\" value=\"".$atto['id']."\" />";
			}
			
			echo "<input type=\"hidden\" id=\"tipologia\" name=\"tipologia\" value=\"incarico\" />";
			?>
			
			<? creaFormTrasp('Soggetto incaricato<br />(cognome e nome)','testo', 'nominativo', '', $istanzaOggetto['nominativo'], '','input-xxlarge',0,'', 0, 0,true); ?>
			
			<? creaFormTrasp('Oggetto incarico o consulenza','testo', 'oggetto', '', $istanzaOggetto['oggetto'], '','input-xxlarge',0,'', 0, 0,true); ?>
			
			<?
			$tipi = prendiTipoIncarico($istanzaOggetto['tipo_incarico']);
			$valTipo = implode(',',$tipi['valori']);
			$etiTipo = implode(',',$tipi['etichette']);
			creaFormTrasp('Tipo di incarico','selezione', 'tipo_incarico', $valTipo, $istanzaOggetto['tipo_incarico'], $etiTipo,'input-xxlarge',0,'Seleziona il tipo', 0, 0,true);
			
			
			$tipi = prendiTipoConsulenza($istanzaOggetto['tipo_consulenza']);
			$valCons = implode(',',$tipi['valori']);
			$etiCons = implode(',',$tipi['etichette']);
			if($valCons != '') {
			     creaFormTrasp('Tipo consulenza','selezione', 'tipo_consulenza', $valCons, $istanzaOggetto['tipo_consulenza'], $etiCons,'input-xxlarge',0,'Seleziona', 0, 0,false);
			}
			?>
			
			<? /* creaFormTrasp('Incarico amm. di vertice/dirigenziale (esclude pubbl. in Consulenti)','casella', 'dirigente', '1', $istanzaOggetto['dirigente'], '',''); */ ?>
			
			<? creaFormTrasp('Struttura organizzativa responsabile','struttura', 'struttura', '', $istanzaOggetto['struttura'], '','input-xxlarge'); ?>
			
			<? creaFormTrasp('Data di inizio incarico','data', 'inizio_incarico', '', $istanzaOggetto['inizio_incarico'], '','',0,'', 0, 0,true); ?>		

			<? creaFormTrasp('Data di fine incarico non disponibile','casella', 'fine_incarico_non_disponibile', '1', $istanzaOggetto['fine_incarico_non_disponibile'], '',''); ?>
			
			<div id="fine_incarico_non_disponibile_textBox">
			<?
			if($istanzaOggetto['fine_incarico_non_disponibile_text'] == '') {
				$istanzaOggetto['fine_incarico_non_disponibile_text'] = 'Data di fine incarico non ancora disponibile';
			}
			creaFormTrasp('Note data di fine incarico non disponibile','testo', 'fine_incarico_non_disponibile_text', '', $istanzaOggetto['fine_incarico_non_disponibile_text'], '','input-xlarge',0,'', 0, 0,true);
			?>
			</div>
			
			<div id="fine_incaricoBox">
			<? creaFormTrasp('Data di fine incarico','data', 'fine_incarico', '', $istanzaOggetto['fine_incarico'], '','',0,'', 0, 0,true); ?>
			</div>				
			
			<? creaFormTrasp('Compenso','decimale', $campoCompenso, '', $istanzaOggetto[$campoCompenso], '','input-medium',0,'', 0, 0,true); ?>
			
			<? creaFormTrasp('Componenti variabili del compenso','areatesto', 'compenso_variabile', '', $istanzaOggetto['compenso_variabile'], '','input-xxlarge'); ?>
			
			<?
			if($enteAdmin['incarichi_importo_rimborso_spesa']) {
				creaFormTrasp('Importo rimborso di spesa','decimale', 'importo_rimborso_spesa', '', $istanzaOggetto['importo_rimborso_spesa'], '','input-medium');
			}
			?>

			<? creaFormTrasp('Estremi atto di conferimento','html', 'estremi_atti', '', $istanzaOggetto['estremi_atti'], '','',0,'', 0, 0,true); ?>
			
			<? creaFormTrasp('Provvedimenti associati','provvedimenti', 'provvedimenti', '', $istanzaOggetto['provvedimenti'], '','input-xxlarge'); ?>
			
			<?
			if(moduloAttivo('soc-trasp')) {
				creaFormTrasp('Tipo di procedura seguita per la selezione del contraente','html', 'tipo_procedura_contraente', '', $istanzaOggetto['tipo_procedura_contraente'], '','');
			
				creaFormTrasp('Numero di partecipanti alla procedura','testo', 'numero_procedura_contraente', '', $istanzaOggetto['numero_procedura_contraente'], '','');
			}
			
			if($id and $istanzaOggetto['modo_individuazione'] != '') {
				creaFormTrasp('Modalit&agrave; seguite per l\'individuazione','html', 'modo_individuazione', '', $istanzaOggetto['modo_individuazione'], '','');
			}
			?>
			
			<? creaFormTrasp('Note (incarichi, cariche, altre attività)','html', 'note', '', $istanzaOggetto['note'], '',''); ?>
			
		</form>
	</div>
</div>

<div class="tab-pane widgetbox box-inverse" id="allegati_tab" role="tabpanel">
	<h4 class="widgettitle">
		Allegati
	</h4>

	<div class="widgetcontent wc1">
		
		<?php
		creaFormTrasp('Allegati','jtable_allegati', '__id_allegati_istanza', '', $istanzaOggetto['__id_allegati_istanza'], '','', 0, '', 1, 0, false, false, array('id_ogg' => $idOggetto, 'id_doc' => $id, 'idAllegatoDinamico' => $idAllegatoDinamico, 'nome_ogg' => $menuSecondario));
		?>
		
	</div>
</div>

</div>

<p class="stdformbutton">
	<?
	if($statoWfPrecedente['id']) {
		?>
		<button onclick="jQuery('#stato_workflow_da_assegnare').val('<? echo $statoWfPrecedente['id']; ?>');inviaForm=true;jQuery('#formOggetto').submit();" class="btn btn-large btn-primary">Torna allo stato precedente (<? echo $statoWfPrecedente['nome']; ?>)</button>
		<?
	}
	include('app/admin_template/oggetti/btn_workflow.tmp');
	?>
	<a href="javascript:abilitaValidazione();" class="btn btn-large btn-primary btnSalvataggio" <? echo $stileBtnSalva; ?>><?php echo $nomeBtn; ?></a>
	<?
	if($statoWfSuccessivo['id']) {
		?>
		<button onclick="jQuery('#stato_workflow_da_assegnare').val('<? echo $statoWfSuccessivo['id']; ?>');inviaForm=true;jQuery('#formOggetto').submit();" class="btn btn-large btn-primary">Vai allo stato successivo (<? echo $statoWfSuccessivo['nome']; ?>)</button>
		<?
	}
	?>
</p>