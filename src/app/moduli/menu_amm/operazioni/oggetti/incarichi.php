<?include_once 'app/moduli/menu_amm/operazioni/oggetti/OperazioneDefault.php';class incarichi extends OperazioneDefault {		public function __construct() { }		public function preInsert($arrayParametri = array()) {		global $enteAdmin;			$this->caricaValoriProceduraRelativa();	}		public function preUpdate($arrayParametri = array()) {		global $enteAdmin;			$this->caricaValoriProceduraRelativa();	}		public function postInsert($arrayParametri = array()) {		if(moduloAttivo('ealbo')) {			$this->inserisciRecordAtto();		}		$this->correggiTipologia();	}		public function postDelete($arrayParametri = array()) {		if(moduloAttivo('ealbo')) {			$this->eliminaRecordAtto();		}	}		public function preDelete($arrayParametri = array()) {	    if(moduloAttivo('incarichiPerlaPA')) {	        $this->eliminaIncarichiPerlaPA();	    }	}		private function inserisciRecordAtto() {		global $database, $dati_db, $enteAdmin;				$sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_incarichi WHERE id_ente = ".$enteAdmin['id']." ORDER BY id DESC LIMIT 1";		if(!($result = $database->connessioneConReturn($sql))) {}		$record = $database->sqlArray($result);				$atto = caricaDocumentoEAlbo('atti', forzaNumero($_POST['id_atto_albo']));				$sql = "INSERT INTO etrasp_atti_ealbo (id_ente, id_ente_albo, id_atto_albo, id_oggetto, id_documento, ultima_modifica) 				VALUES (".$enteAdmin['id'].", ".$enteAdmin['id_ente_albo'].", ".forzaNumero($_POST['id_atto_albo']).", 4, ".$record['id'].", ".$atto['ultima_modifica'].")";		if(!($result = $database->connessioneConReturn($sql))) {}				collegaAttoEtrasparenza(forzaNumero($_POST['id_atto_albo']), 1, $enteAdmin);	}		private function eliminaRecordAtto() {		global $database, $dati_db, $enteAdmin;				$cancello = isset($_POST['id_cancello_tabella']) ? forzaStringa($_POST['id_cancello_tabella']) : 0;		$arrayOggetti = explode(",", $cancello);		$arrayOggettiAlbo = array();		$numeroOggetti = count($arrayOggetti)-1;		$condizione = 'id_documento='.$arrayOggetti[0];		$arrayOggettiAlbo[] = getIdRecordAtto($enteAdmin['id'], $enteAdmin['id_ente_albo'], $arrayOggetti[0], 4);		for ($i=1;$i<$numeroOggetti+1;$i++) {			if ($arrayOggetti[$i] != '') {				$condizione .= ' OR id_documento='.$arrayOggetti[$i];				$arrayOggettiAlbo[] = getIdRecordAtto($enteAdmin['id'], $enteAdmin['id_ente_albo'], $arrayOggetti[$i], 4);			}		}		$sql = "DELETE FROM ".$dati_db['prefisso']."etrasp_atti_ealbo WHERE id_ente = ".$enteAdmin['id']." AND id_ente_albo = ".$enteAdmin['id_ente_albo']." AND id_oggetto = 4 AND (".$condizione.")";		if(!($result = $database->connessioneConReturn($sql))) {}				foreach((array) $arrayOggettiAlbo as $id) {			collegaAttoEtrasparenza($id, 0, $enteAdmin);		}	}		private function correggiTipologia() {		global $database, $dati_db, $enteAdmin;			$sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_incarichi WHERE id_ente = ".$enteAdmin['id']." ORDER BY id DESC LIMIT 1";		if(!($result = $database->connessioneConReturn($sql))) {}		$record = $database->sqlArray($result);			if($record['tipologia'] == '') {			//forzo incarico			$sql = "UPDATE ".$dati_db['prefisso']."oggetto_incarichi SET tipologia = 'incarico' WHERE id = ".$record['id'];			if(!($result = $database->connessioneConReturn($sql))) {}		}		}		private function caricaValoriProceduraRelativa() {		global $database, $dati_db, $enteAdmin;			if($_POST['id_incarico']) {			//inserimento/modifica liquidazione			$id_record = forzaNumero($_POST['id_incarico']);			$record = mostraDatoOggetto($id_record, 4, '*');			if($record['id']){				$_POST['nominativo'] = html_entity_decode(addslashes($record['nominativo']),ENT_COMPAT | ENT_HTML401, 'ISO-8859-1');				$_POST['oggetto'] = html_entity_decode(addslashes($record['oggetto']),ENT_COMPAT | ENT_HTML401, 'ISO-8859-1');				$_POST['dirigente'] = $record['dirigente'];				$_POST['tipo_incarico'] = $record['tipo_incarico'];				$_POST['struttura'] = addslashes($record['struttura']);			}		} else {			$oggOgg = new oggettiAdmin(4);			//inserimento/modifica incarico: modifico le eventuali liquidazioni			$sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_incarichi WHERE id_ente=".$enteAdmin['id']." "					." AND id_incarico = ".forzaNumero($_GET['id'])." AND tipologia='liquidazione' "					." ORDER BY id";			if ( !($result = $database->connessioneConReturn($sql)) ) {}			$recs = $database->sqlArrayAss($result);			foreach((array)$recs as $r) {				$arrayValori = array(						'id_proprietario' => $r['id_proprietario'],						'id_lingua' => 0,						'nominativo' => forzaStringa($_POST['nominativo']),				        'oggetto' => forzaStringa($_POST['oggetto']),				        'dirigente' => forzaStringa($_POST['dirigente']),				        'tipo_incarico' => forzaStringa($_POST['tipo_incarico']),				        'struttura' => forzaStringa($_POST['struttura'])				);				if($oggOgg->modificaOggetto($r['id'], 0, $arrayValori)) {}			}		}		}		private function eliminaIncarichiPerlaPA() {	    global $database, $dati_db, $enteAdmin, $entePubblicato;	    	    $cancello = isset($_POST['id_cancello_tabella']) ? forzaStringa($_POST['id_cancello_tabella']) : 0;	    $arrayOggetti = explode(",", $cancello);	    $cond = array();	    foreach((array)$arrayOggetti as $inc) {	        if ($inc['id'] > 0) {	            $cond[] = $inc['id'];	        }	    }	    if(count($cond)>0) {	        $cond = implode(' OR ', $cond);	        $sql = "SELECT * FROM ".$dati_db['prefisso']."oggetto_incarichi WHERE id_ente = ".$enteAdmin['id']." AND id IN (".$cond.") AND __perlapa_idIncarico > 0";	        if(!($result = $database->connessioneConReturn($sql))) {}	        $records = $database->sqlArrayAss($result);            	        include('app/classi/perlapa/anp2018/anp2018.php');            $numDelete = 0;            $numErrori = 0;	        	        foreach((array)$records as $istanzaOggetto) {                //incarico                $xmlDoc = new DOMDocument();                $xmlDoc->encoding = 'UTF-8';                                //root                $root = $xmlDoc->appendChild($xmlDoc->createElement("incarico"));                $root->appendChild($xmlDoc->createAttribute("xmlns:leg"))->appendChild($xmlDoc->createTextNode("http://perlapa.gov.it/anagrafeprestazioni_2018_incarichi"));                                $com = $root->appendChild($xmlDoc->createElement("leg:comunicazione"));                                $cancellazioneincarico = $com->appendChild($xmlDoc->createElement("leg:cancellazioneincarico"));                                $amministrazionedichiarante = $cancellazioneincarico->appendChild($xmlDoc->createElement("leg:amministrazionedichiarante"));                $amministrazionedichiarante->appendChild($xmlDoc->createAttribute("codicePaIpa"))->appendChild($xmlDoc->createTextNode($istanzaOggetto['dichiarante_codicePalpa']));                $amministrazionedichiarante->appendChild($xmlDoc->createAttribute("codiceFiscalePa"))->appendChild($xmlDoc->createTextNode($istanzaOggetto['dichiarante_codiceFiscalePa']));                if($istanzaOggetto['dichiarante_codiceAoolpa'] != '') {                    $amministrazionedichiarante->appendChild($xmlDoc->createAttribute("codiceAooIpa"))->appendChild($xmlDoc->createTextNode($istanzaOggetto['dichiarante_codiceAoolpa']));                } else {                    $amministrazionedichiarante->appendChild($xmlDoc->createAttribute("codiceUoIpa"))->appendChild($xmlDoc->createTextNode($istanzaOggetto['dichiarante_codiceUolpa']));                }                                $datiInc = $cancellazioneincarico->appendChild($xmlDoc->createElement("leg:datiincarico"));                $datiInc->appendChild($xmlDoc->createAttribute("idIncarico"))->appendChild($xmlDoc->createTextNode($istanzaOggetto['__perlapa_idIncarico']));                                $xmlDoc->formatOutput = true;	                                try {                    $inc = new cancellazioneIncarico();                                        $inc->username = 'user';                    $inc->password = 'pass';                    $inc->any = str_replace('<?xml version="1.0" encoding="UTF-8"?>','',$xmlDoc->saveXML());                                        $anp = new anp();                                        $response = $anp->cancellazioneIncarico($inc);                    $xmlResp = simplexml_load_string($response->cancellazioneIncaricoResult->any);                                        foreach((array)$xmlResp as $k => $v) {                        if($k == 'esito') {                            if($v == 'OK') {                                $numDelete++;                            } else {                                $numErrori++;                            }                        }                    }	                                    } catch (Exception $e) {                    echo 'eccezione';                    //lognormale('SoapClient',$anp);                    ob_start();                    //lognormale('',$e);                    $txtLog = ob_get_clean();                    ob_end_flush();                                        //invia mail errore                    include_once('classi/costruisci_mail.php');                    $mailAvviso = new costruisciMail('comunicazione_template', $entePubblicato['nome_completo_ente']." - Errore delete PerlaPA - ".date('d/m/Y H:i:s'), 'nico@isweb.it', 'tecnico@isweb.it');                    $mailAvviso->assegnaVariabili(array(                        'MESSAGGIO' => $txtLog                    ));                    //$mailAvviso->invia();                }	        }	    }	    	}}?>